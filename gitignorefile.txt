cat .gitignore

*.rbc
capybara-*.html
.rspec
/log
/tmp
/db/*.sqlite3
/public/system
/coverage/
/spec/tmp
**.orig
rerun.txt
pickle-email-*.html

# TODO Comment out these rules if you are OK with secrets being uploaded to the repo
config/initializers/secret_token.rb
config/secrets.yml

## Environment normalisation:
/.bundle
/vendor/bundle


Давайте повнимательнее рассмотрим этот файл: В первой строке написано,
что необходимо игнорировать все файлы, которые заканчиваются на .rbc,
в четвертой, что необходимо игнорировать директорию log,
в шестой - все файлы конфигураций баз данных sqlite3.
Сразу видно, что для большинства правил используются некоторые шаблоны.
Но можно указывать и полный путь до конкретного файла,
как сделано в 15 и 16 строках. Git всегда мягко применяет эти правила.
Если вы указали, что необходимо игнорировать просто строку
test - то он будет игнорировать и директории (вместе со вложенными файлами) и файлы,
которые называются test, вне зависимости, где они располагаются.
Если вы хотите ограничиться только корневым уровнем в 
репозитории - необходимо явно это указать поставив “/” перед шаблоном.

К шаблонам в файле .gitignore применяются следующие правила:

-Пустые строки, а также строки, начинающиеся с #, игнорируются.
-Можно использовать стандартные glob шаблоны.
-Можно заканчивать шаблон символом слэша (/) для указания каталога.
-Можно инвертировать шаблон, использовав восклицательный знак (!)
 в качестве первого символа.

Glob-шаблоны представляют собой упрощённые регулярные
выражения используемые командными интерпретаторами.
Символ * соответствует 0 или более символам; 
последовательность [abc] — любому символу из указанных в
скобках (в данном примере a, b или c); знак вопроса (?)
соответствует одному символу; [0-9] соответствует любому 
cимволу из интервала (в данном случае от 0 до 9). 


Вот ещё один пример файла .gitignore:

# комментарий — эта строка игнорируется

# не обрабатывать файлы, имя которых заканчивается на .a
*.a

# НО отслеживать файл lib.a, несмотря на то, что мы игнорируем все .a файлы с помощью предыдущего правила
!lib.a

# игнорировать только файл TODO находящийся в корневом каталоге, не относится к файлам вида subdir/TODO
/TODO

# игнорировать все файлы в каталоге build/
build/

# игнорировать doc/notes.txt, но не doc/server/arch.txt
doc/*.txt

# игнорировать все .txt файлы в каталоге doc/
doc/**/*.txt
